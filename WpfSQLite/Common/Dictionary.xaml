<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

   <Style x:Key="Bussiness">
      <Setter Property="TextElement.FontFamily"
              Value="/Resources/#Bussiness" />
   </Style>

   <Style x:Key="custonFont">
      <Setter Property="TextElement.FontFamily" Value="/Resources/#Mechanic"></Setter>
      <Setter Property="TextElement.FontSize" Value="200"></Setter>
      <Setter Property="TextElement.Foreground" Value="White"></Setter>
   </Style>

   <Style x:Key="GenericPageStyleInit" TargetType="{x:Type Page}">
      <Setter Property="Background">
         <Setter.Value>
            <ImageBrush ImageSource="../Resources/backgroundMW.png"/>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="GenericPageStyle" TargetType="{x:Type Page}">
      <Setter Property="Background">
         <Setter.Value>
            <ImageBrush ImageSource="../Resources/bg.png" />
         </Setter.Value>
      </Setter>
   </Style>

   <!--/LABEL-->
   <Style x:Key="whiteLabel" TargetType="{x:Type Label}">
      <Setter Property="FontFamily" Value="Arial Black"/>
      <Setter Property="FontSize" Value="20"/>
      <Setter Property="Foreground" Value="WhiteSmoke"/>
   </Style>

   <!--metrobottom-->

   <Style
      x:Key="ButtonFocusVisual">
      <Setter
         Property="Control.Template">
         <Setter.Value>
            <ControlTemplate>
               <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="MetroButton" TargetType="{x:Type Button}">
      <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
      <Setter Property="Background" Value="#EEEEEEEE"/>
      <Setter Property="Foreground" Value="#ff0a82c2"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
               <Grid>
                  <Border
                     x:Name="Border"
                     Background="#EEEEEEEE"
                     BorderBrush="Gray"
                     BorderThickness="1"
                     CornerRadius="4"/>

                  <ContentPresenter
                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                     Margin="{TemplateBinding Padding}"
                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                     RecognizesAccessKey="True" />
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter Property="OpacityMask" Value="#AA888888"/>
                     <Setter Property="Margin" Value="6 1" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="BorderThickness" Value="0"/>
                     <!--<Setter Property="Background" Value="DimGray"/>-->
                     <Setter Property="Foreground" Value="#ff075e8c"/>
                     <Setter Property="FontWeight" Value="SemiBold"></Setter>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter Property="Foreground" Value="#ADADAD"/>

                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!--/metrobottom-->

   <!--inforbottom-->

   <Style x:Key="MyFocusVisual">
      <Setter Property="Control.Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Control}">
               <Grid Margin="3 2">
                  <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                  <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="ShadowStyle">
      <Setter Property="Control.Foreground" Value="LightGray" />
   </Style>

   <Style x:Key="InformButton" TargetType="Button">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Margin" Value="2"/>
      <Setter Property="FontFamily" Value="Verdana"/>
      <Setter Property="FontSize" Value="11px"/>
      <Setter Property="FontWeight" Value="Bold"/>
      <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
      <Setter Property="Background" >
         <Setter.Value>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
               <GradientStop Color="#FFFFD190" Offset="0.2"/>
               <GradientStop Color="Orange" Offset="0.85"/>
               <GradientStop Color="#FFFFD190" Offset="1"/>
            </LinearGradientBrush>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Border Name="border"
                       BorderThickness="1"
                       Padding="4,2"
                       BorderBrush="DarkGray"
                       CornerRadius="3"
                       Background="{TemplateBinding Background}">
                  <Grid >
                     <ContentPresenter HorizontalAlignment="Center"
                                       VerticalAlignment="Center" Name="contentShadow"
                                       Style="{StaticResource ShadowStyle}">
                        <ContentPresenter.RenderTransform>
                           <TranslateTransform X="1.0" Y="1.0" />
                        </ContentPresenter.RenderTransform>
                     </ContentPresenter>
                     <ContentPresenter HorizontalAlignment="Center"
                                       VerticalAlignment="Center" Name="content"/>
                  </Grid>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                     <Setter Property="Foreground" Value="#FF4788c8" />
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter Property="Background" >
                        <Setter.Value>
                           <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                              <GradientStop Color="#FFFFD190" Offset="0.35"/>
                              <GradientStop Color="Orange" Offset="0.95"/>
                              <GradientStop Color="#FFFFD190" Offset="1"/>
                           </LinearGradientBrush>
                        </Setter.Value>
                     </Setter>
                     <Setter TargetName="content" Property="RenderTransform" >
                        <Setter.Value>
                           <TranslateTransform Y="1.0" />
                        </Setter.Value>
                     </Setter>
                  </Trigger>
                  <Trigger Property="IsDefaulted" Value="True">
                     <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                  </Trigger>
                  <Trigger Property="IsFocused" Value="True">
                     <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter TargetName="border" Property="Opacity" Value="0.7" />
                     <Setter Property="Foreground" Value="Gray" />
                  </Trigger>

               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!--/inforbottom-->

   <Style x:Key="OtherButtonFocusVisual">
      <Setter Property="Control.Template">
         <Setter.Value>
            <ControlTemplate>
               <Border>
                  <Rectangle SnapsToDevicePixels="true" Margin="4" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
      <Setter Property="FocusVisualStyle" Value="{StaticResource OtherButtonFocusVisual}"/>
      <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      <Setter Property="BorderThickness" Value="3"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Padding" Value="0,0,1,1"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
               <ControlTemplate.Resources>
                  <Storyboard x:Key="ShowShine">
                     <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                  <Storyboard x:Key="HideShine">
                     <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
               </ControlTemplate.Resources>
               <Border CornerRadius="5,5,5,5" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5" x:Name="border" BorderBrush="#FFFFFFFF">
                  <Border.RenderTransform>
                     <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform X="0" Y="0"/>
                     </TransformGroup>
                  </Border.RenderTransform>
                  <Border Background="{TemplateBinding Background}" CornerRadius="5,5,5,5" x:Name="border1">
                     <Grid>
                        <Grid.RowDefinitions>
                           <RowDefinition Height="0.5*"/>
                           <RowDefinition Height="0.5*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" CornerRadius="5,5,0,0">
                           <Border.Background>
                              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                 <GradientStop Color="#00FFFFFF" Offset="0"/>
                                 <GradientStop Color="#7EFFFFFF" Offset="1"/>
                              </LinearGradientBrush>
                           </Border.Background>
                        </Border>
                        <Border Grid.Row="1" Opacity="0" x:Name="Shine" Width="Auto" Height="Auto" CornerRadius="0,0,5,5" Margin="1,0,-1,0" Background="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter VerticalAlignment="Center"  Grid.RowSpan="2" HorizontalAlignment="Center" x:Name="contentPresenter"/>
                     </Grid>
                  </Border>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Opacity" TargetName="border1" Value="0.5"/>
                     <Setter Property="Opacity" TargetName="border" Value="1"/>
                     <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter Property="RenderTransform" TargetName="border">
                        <Setter.Value>
                           <TransformGroup>
                              <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                              <SkewTransform AngleX="0" AngleY="0"/>
                              <RotateTransform Angle="0"/>
                              <TranslateTransform X="0" Y="0"/>
                           </TransformGroup>
                        </Setter.Value>
                     </Setter>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource HideShine}" x:Name="HideShine_BeginStoryboard"/>
                     </Trigger.ExitActions>
                     <Trigger.EnterActions>
                        <BeginStoryboard x:Name="ShowShine_BeginStoryboard" Storyboard="{StaticResource ShowShine}"/>
                     </Trigger.EnterActions>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>


</ResourceDictionary>